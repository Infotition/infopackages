@import '@infotition/design-system/lib/colors.scss';

$radius: 0.2rem !default;

:root {
  --primary: #{$clr-primary-700};
  --error: #{$clr-warning-700};
  --text: #{$clr-neutral-800};
  --label: #{$clr-neutral-600};
  --border: #{$clr-neutral-300};
  --border-dark: #{$clr-neutral-500};
  --disabled: #{$clr-neutral-200};
  --disabled-text: #{$clr-neutral-500};
  --filled: #{$clr-neutral-100};
  --filled-dark: #{darken($clr-neutral-100, 3%)};
}

.dark,
[data-theme='dark'] {
  --primary: #{$clr-primary-200};
  --error: #{$clr-warning-200};
  --text: #{$clr-neutral-100};
  --label: #{$clr-neutral-400};
  --border: #{$clr-neutral-700};
  --border-dark: #{$clr-neutral-600};
  --disabled: #{$clr-neutral-700};
  --disabled-text: #{$clr-neutral-400};
  --filled: #{$clr-neutral-800};
  --filled-dark: #{lighten($clr-neutral-800, 3%)};
}

/* GLOBAL STYLES */
.text-field-container {
  font-family: 'Poppins', sans-serif;
  width: 200px;
  height: 50px;

  * {
    box-sizing: border-box;
  }
}

.text-field {
  position: relative;
  transition: background-color 250ms ease;
  width: 100%;
  height: 100%;

  input {
    outline: none;
    color: var(--text);
    background: none;
    border: none;

    /* If element is focused the label color is primary. */
    &:focus ~ label {
      color: var(--primary);
    }
  }

  label {
    position: absolute;
    left: 1rem;
    color: var(--label);
    transition: bottom 200ms ease, top 200ms ease, left 200ms ease,
      font-size 200ms ease;
    pointer-events: none;
    top: 50%;
    transform: translateY(-50%);
  }
}

.below {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.helper,
.limit {
  font-size: 0.7rem;
  display: block;
  transition: opacity 100ms ease;
  color: var(--label);
}

.helper {
  padding: 5px 0 0 1rem;
}

.limit {
  padding: 5px 1rem 0 0;
}

.right-adornment-item,
.left-adornment-item {
  position: absolute !important;
  top: 50%;
  transform: translateY(-50%);

  svg {
    color: var(--label) !important;
  }

  &:disabled svg {
    color: var(--border) !important;
  }
}

.right-adornment-item {
  right: calc(1rem - 10px);
}

.left-adornment-item {
  left: calc(1rem - 10px);
}

/* ADORNMENT STYLES */
.right-adornment input {
  width: calc(100% - 1rem - 15px) !important;
}

.left-adornment {
  input {
    width: calc(100% - 1rem - 15px) !important;
    margin-left: calc(1rem + 15px);
  }

  label {
    left: 3rem;
  }
}

.left-adornment.right-adornment input {
  width: calc(100% - 1rem - 15px - 1rem - 15px) !important;
  margin-left: calc(1rem + 15px);
}

/* FULL WIDTH STYLES */

.text-field-container.full-width {
  width: 100% !important;
}

/* MISSING LABEL STYLES */

.text-field {
  /* Place input field in the center. */
  &.filled.without-label input {
    padding: 1.15rem 1rem !important;
  }

  /* Only focus animation and don't remove border if written. */
  &.outlined.without-label input:focus ~ div {
    border: 2px solid var(--primary) !important;
    margin: 0 -1px;
  }

  &.outlined.without-label input:not(:placeholder-shown) ~ div {
    border: 1px solid var(--border);
  }

  /* If label is missing, also hide the helper text. */
  &.without-label ~ div .helper {
    opacity: 0;
  }

  /* If text field is focused, show the helper text again. */
  &.without-label:focus-within ~ div .helper {
    opacity: 1;
  }
}

/* DISABLED STYLES */

.disabled {
  .helper,
  .text-field label,
  .text-field input {
    color: var(--disabled-text) !important;
  }

  .text-field input:hover ~ fieldset,
  .text-field input:hover:not(:focus):placeholder-shown ~ div {
    border-color: var(--disabled) !important;
  }

  .filled {
    background-color: var(--disabled) !important;

    &::before {
      border-bottom: 1px dashed var(--disabled-text) !important;
    }
  }
}

/* FILLED VARIANT STYLES */

.text-field.filled {
  border-radius: $radius;
  background-color: var(--filled);
  position: relative;

  fieldset {
    display: none;
  }

  &:hover {
    background-color: var(--filled-dark);
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    display: block;
    bottom: 0;
    width: 100%;
  }

  &::before {
    border-bottom: 1px solid var(--border);
  }

  &::after {
    border-bottom: 2px solid var(--primary);
    transform: scaleX(0);
    transition: transform 150ms ease;
  }

  &:focus-within::after {
    transform: scaleX(1);
  }

  input {
    padding: 1.7rem 1rem 0.5rem 1rem;

    /* If element is focused and text was written, move label on top. */
    &:focus ~ label,
    &:not(:placeholder-shown) ~ label {
      top: 0.9rem;
      font-size: 0.7rem;
    }
  }
}

/* OUTLINED VARIANT STYLES */

.text-field.outlined {
  fieldset {
    position: absolute;
    margin: 0;
    width: 100%;
    height: calc(100% + 11.5px);
    padding-left: 10px;
    border-radius: $radius;
    top: -11.5px;
    pointer-events: none;
    box-sizing: border-box;
    border: none;

    legend {
      color: transparent;
    }
  }

  div {
    width: 100%;
    height: 100%;
    border: 1px solid var(--border);
    border-radius: $radius;
  }

  input {
    position: absolute;
    width: 100%;
    height: 100%;
    padding: 0.7rem 1rem;
    z-index: 1;

    /* If element is focused and text was written, move label on top. */
    &:focus ~ label,
    &:not(:placeholder-shown) ~ label {
      top: 1px;
      font-size: 0.8rem;
      left: 1.2rem;
    }

    /* If element is focused the border color is primary. */
    &:focus ~ fieldset {
      border: 2px solid var(--primary);
    }

    /* If element is not focused and text is written, enable fieldset border. */
    &:not(:focus):not(:placeholder-shown) ~ fieldset {
      border: 1px solid var(--border);
    }

    /* If element is not focused and text is written but was hover, darken the border. */
    &:hover:not(:focus):not(:placeholder-shown) ~ fieldset {
      border: 1px solid var(--border-dark);
    }

    /* If input is focused or text was written, switch to fieldset border. */
    &:focus ~ div,
    &:not(:placeholder-shown) ~ div {
      border: none;
    }

    /* If input hovered while not focus without text, darken its color. */
    &:hover:not(:focus):placeholder-shown ~ div {
      border: 1px solid var(--border-dark);
    }
  }
}

/* ERROR STYLES */

.error {
  .text-field.outlined input {
    &:focus ~ fieldset {
      border: 2px solid var(--error);
    }

    &:focus ~ div,
    &:not(:placeholder-shown) ~ div {
      border: none;
    }

    ~ div,
    &:not(:focus):not(:placeholder-shown) ~ fieldset,
    &:hover:not(:focus):not(:placeholder-shown) ~ fieldset,
    &:hover:not(:focus):placeholder-shown ~ div {
      border: 1px solid var(--error);
    }
  }

  .text-field.filled::after {
    border-bottom: 2px solid var(--error);
    transform: scaleX(1);
  }

  .text-field label,
  .below * {
    color: var(--error) !important;
  }
}
